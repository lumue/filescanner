buildscript {
    ext {
        springBootVersion = '1.2.3.RELEASE'
    }
    repositories {
        mavenCentral()
		
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    	classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'docker'


configurations {
    runtime
    testCompile
}




jar {
    baseName = 'filescanner'
    version = '0.0.1-SNAPSHOT'
}

    sourceCompatibility = 1.8
    targetCompatibility = 1.8


repositories {
    mavenCentral()
	maven{
		url('http://maven.springframework.org/milestone/')
		}
    maven { url('http://repo.springsource.org/libs-milestone/') }
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-integration")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile 'org.springframework.data:spring-data-elasticsearch'

    compile("org.projectreactor.spring:reactor-spring-context:2.0.0.M1")
	
	compile group: 'com.google.guava', name: 'guava', version: '12.0'
	compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.5.1'
	compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.5.1'

    compile 'org.apache.tika:tika-core:1.10'
    compile 'org.apache.tika:tika-parsers:1.10'


    testCompile 'junit:junit:4.11'
	
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

group = 'lumue'

task buildDocker(type: Docker, dependsOn: build) {
	
	push = true
	applicationName = jar.baseName
	
	dockerfile = file('src/main/docker/Dockerfile')
	
	doFirst {
	  copy {
		from jar
		into stageDir
	  }
	}
	
  }
  

task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}
