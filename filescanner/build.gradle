buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
    }
    repositories {
        mavenCentral()
		
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    	classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}




apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'docker'

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    runtime
    testCompile
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}




jar {
    baseName = 'filescanner-server'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenCentral()
	maven{
		url('http://maven.springframework.org/milestone/')
		}
    maven { url('http://repo.springsource.org/libs-milestone/') }
    maven { url ('https://github.com/lumue/maven-repository/raw/master/')}
    maven { url('http://download.oracle.com/maven')}
}

dependencies {

    compile("org.springframework.boot:spring-boot-starter-web")
    compile 'org.springframework.data:spring-data-elasticsearch'

    compile 'org.projectreactor.spring:reactor-spring-context:1.1.3.RELEASE'


    compile group: 'com.google.guava', name: 'guava', version: '12.0'
	compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.5.1'
	compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.5.1'

    compile 'org.apache.tika:tika-core:1.10'
    compile 'org.apache.tika:tika-parsers:1.10'

    compile 'io.github.lumue:nfotools:1.0-RELEASE'



    testCompile 'junit:junit:4.11'

    integrationTestCompile 'org.springframework.boot:spring-boot-starter-test'
}


task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

group = 'media:5000'

task buildDocker(type: Docker, dependsOn: [build,integrationTestClasses]) {
	
	push = true
	applicationName = jar.baseName
	
	dockerfile = file('src/main/docker/Dockerfile')
	
	doFirst {
	  copy {
		from jar
		into stageDir
	  }
	}
}
  
idea {


  module {
    
    //and some extra test source dirs
    testSourceDirs += file('src/integration-test/java')


    //if you need to put 'provided' dependencies on the classpath
    scopes.TEST.plus += [ configurations.integrationTestCompile ]
    downloadSources = true
  }
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}
